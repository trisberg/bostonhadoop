buildscript {
    ext {
        springBootVersion = '1.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'batch-demo'
    version = '0.1.0'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group:'org.slf4j', module: 'log4j-over-slf4j'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-log4j")
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.data:spring-data-hadoop:2.0.2.RELEASE-hadoop24")
    compile("org.apache.hadoop:hadoop-client:2.4.1")
	runtime("com.springdeveloper.demo:tweets-hashtags:0.1.0")
    runtime("org.codehaus.groovy:groovy-all")
    runtime("mysql:mysql-connector-java:5.1.32")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
